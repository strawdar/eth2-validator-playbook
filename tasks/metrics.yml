---
#
# Setup dedicated metrics user and directory (currently unused)
#

- name: create dedicated user for metrics
  become: yes
  user:
    name: metrics
    create_home: no
    home: /nonexistent
    shell: /bin/false

- name: prepare workspace for metrics user
  become: yes
  file:
    path: /var/lib/metrics
    state: directory
    recurse: yes
    mode: o-rwx
    owner: metrics
    group: metrics

#
# Prometheus install
#

- name: Prometheus - install along w/ node-exporter
  become: yes
  apt:
    pkg:
      - prometheus
      - prometheus-node-exporter

- name: Prometheus - backup stock prometheus.yml
  become: yes
  copy:
    src: /etc/prometheus/prometheus.yml
    dest: /etc/prometheus/prometheus-ubuntu-defaults.yml
    remote_src: yes

- name: Prometheus - upload prometheus.yml
  become: yes
  copy:
    src: files/prometheus.yml
    dest: /etc/prometheus/prometheus.yml
    force: yes

#
# Grafana install
#

- name: Grafana - add GPG key
  become: yes
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Grafana - add APT repository
  become: yes
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present

- name: Grafana - install
  become: yes
  apt:
    name: grafana
    state: latest
    update_cache: yes

- name: Grafana - make ssl directory
  become: yes
  file:
    path: /var/lib/grafana/ssl
    state: directory
    owner: grafana
    group: grafana

- name: Grafana - generate private key
  become: yes
  openssl_privatekey:
    path: /var/lib/grafana/ssl/validator.pem
    owner: grafana
    group: grafana

- name: Grafana - generate certificate signing request
  become: yes
  openssl_csr:
    path: /var/lib/grafana/ssl/validator.csr
    privatekey_path: /var/lib/grafana/ssl/validator.pem
    common_name: validator.local
    owner: grafana
    group: grafana

- name: Grafana - generate self-signed certificate
  become: yes
  openssl_certificate:
    path: /var/lib/grafana/ssl/validator.crt
    privatekey_path: /var/lib/grafana/ssl/validator.pem
    csr_path: /var/lib/grafana/ssl/validator.csr
    provider: selfsigned
    owner: grafana
    group: grafana

- name: Grafana - configure to use HTTPS
  become: yes
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^(\;)*protocol \='
    line: 'protocol = https'
    state: present

- name: Grafana - configure to use secure cookies
  become: yes
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^(\;)*cookie_secure \='
    line: 'cookie_secure = true'
    state: present

- name: Grafana - specify certificate key
  become: yes
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^cert_key \='
    insertafter: '^# https certs & key file'
    line: 'cert_key = /var/lib/grafana/ssl/validator.pem'
    state: present

- name: Grafana - specify certificate file
  become: yes
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^cert_file \='
    insertafter: '^# https certs & key file'
    line: 'cert_file = /var/lib/grafana/ssl/validator.crt'
    state: present

- name: Grafana - disable user account signup
  become: yes
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^allow_sign_up \='
    insertafter: '^# disable user signup / registration'
    line: 'allow_sign_up = false'
    state: present

- name: Grafana - remove global access to home directory
  become: yes
  file:
    path: /var/lib/grafana
    state: directory
    recurse: yes
    mode: o-rwx

#
# Misc
#

- name: systemd daemon-reload
  become: yes
  systemd:
    daemon_reload: yes

- name: UFW - allow port 3000 (Grafana)
  become: yes
  ufw:
    rule: allow
    port: 3000
